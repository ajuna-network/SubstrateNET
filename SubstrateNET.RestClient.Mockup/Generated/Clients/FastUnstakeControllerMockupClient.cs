//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubstrateNET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using SubstrateNET.NetApi.Generated.Model.pallet_fast_unstake.types;
   using Ajuna.NetApi.Model.Types.Primitive;
   using SubstrateNET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class FastUnstakeControllerMockupClient : MockupBaseClient, IFastUnstakeControllerMockupClient
   {
      private HttpClient _httpClient;
      public FastUnstakeControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetHead(UnstakeRequest value)
      {
         return await SendMockupRequestAsync(_httpClient, "FastUnstake/Head", value.Encode(), SubstrateNET.NetApi.Generated.Storage.FastUnstakeStorage.HeadParams());
      }
      public async Task<bool> SetQueue(U128 value, SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "FastUnstake/Queue", value.Encode(), SubstrateNET.NetApi.Generated.Storage.FastUnstakeStorage.QueueParams(key));
      }
      public async Task<bool> SetCounterForQueue(U32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "FastUnstake/CounterForQueue", value.Encode(), SubstrateNET.NetApi.Generated.Storage.FastUnstakeStorage.CounterForQueueParams());
      }
      public async Task<bool> SetErasToCheckPerBlock(U32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "FastUnstake/ErasToCheckPerBlock", value.Encode(), SubstrateNET.NetApi.Generated.Storage.FastUnstakeStorage.ErasToCheckPerBlockParams());
      }
   }
}
