//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Ajuna.ServiceLayer.Attributes;
using Microsoft.AspNetCore.Mvc;
using SubstrateNET.NetApi.Generated.Model.PalletAssets;
using SubstrateNET.NetApi.Generated.Model.SpCore;
using SubstrateNET.RestService.Generated.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace SubstrateNET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// AssetsController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class AssetsController : ControllerBase
    {
        
        private IAssetsStorage _assetsStorage;
        
        /// <summary>
        /// AssetsController constructor.
        /// </summary>
        public AssetsController(IAssetsStorage assetsStorage)
        {
            _assetsStorage = assetsStorage;
        }
        
        /// <summary>
        /// >> Asset
        ///  Details of an asset.
        /// </summary>
        [HttpGet("Asset")]
        [ProducesResponseType(typeof(SubstrateNET.NetApi.Generated.Model.PalletAssets.AssetDetails), 200)]
        [StorageKeyBuilder(typeof(SubstrateNET.NetApi.Generated.Model.PalletAssets.AssetsStorage), "AssetParams", typeof(Ajuna.NetApi.Model.Types.Primitive.U32))]
        public IActionResult GetAsset(string key)
        {
            return this.Ok(_assetsStorage.GetAsset(key));
        }
        
        /// <summary>
        /// >> Account
        ///  The holdings of a specific account for a specific asset.
        /// </summary>
        [HttpGet("Account")]
        [ProducesResponseType(typeof(SubstrateNET.NetApi.Generated.Model.PalletAssets.AssetAccount), 200)]
        [StorageKeyBuilder(typeof(SubstrateNET.NetApi.Generated.Model.PalletAssets.AssetsStorage), "AccountParams", typeof(BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32,SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32>))]
        public IActionResult GetAccount(string key)
        {
            return this.Ok(_assetsStorage.GetAccount(key));
        }
        
        /// <summary>
        /// >> Approvals
        ///  Approved balance transfers. First balance is the amount approved for transfer. Second
        ///  is the amount of `T::Currency` reserved for storing this.
        ///  First key is the asset ID, second key is the owner and third key is the delegate.
        /// </summary>
        [HttpGet("Approvals")]
        [ProducesResponseType(typeof(SubstrateNET.NetApi.Generated.Model.PalletAssets.Approval), 200)]
        [StorageKeyBuilder(typeof(SubstrateNET.NetApi.Generated.Model.PalletAssets.AssetsStorage), "ApprovalsParams", typeof(BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32,SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32,SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32>))]
        public IActionResult GetApprovals(string key)
        {
            return this.Ok(_assetsStorage.GetApprovals(key));
        }
        
        /// <summary>
        /// >> Metadata
        ///  Metadata of an asset.
        /// </summary>
        [HttpGet("Metadata")]
        [ProducesResponseType(typeof(SubstrateNET.NetApi.Generated.Model.PalletAssets.AssetMetadata), 200)]
        [StorageKeyBuilder(typeof(SubstrateNET.NetApi.Generated.Model.PalletAssets.AssetsStorage), "MetadataParams", typeof(Ajuna.NetApi.Model.Types.Primitive.U32))]
        public IActionResult GetMetadata(string key)
        {
            return this.Ok(_assetsStorage.GetMetadata(key));
        }
    }
}
