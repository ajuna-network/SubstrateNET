//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Types.Base;
using Ajuna.ServiceLayer.Attributes;
using Microsoft.AspNetCore.Mvc;
using SubstrateNET.RestService.Generated.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace SubstrateNET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// FastUnstakeController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class FastUnstakeController : ControllerBase
    {
        
        private IFastUnstakeStorage _fastUnstakeStorage;
        
        /// <summary>
        /// FastUnstakeController constructor.
        /// </summary>
        public FastUnstakeController(IFastUnstakeStorage fastUnstakeStorage)
        {
            _fastUnstakeStorage = fastUnstakeStorage;
        }
        
        /// <summary>
        /// >> Head
        ///  The current "head of the queue" being unstaked.
        /// </summary>
        [HttpGet("Head")]
        [ProducesResponseType(typeof(SubstrateNET.NetApi.Generated.Model.pallet_fast_unstake.types.UnstakeRequest), 200)]
        [StorageKeyBuilder(typeof(SubstrateNET.NetApi.Generated.Storage.FastUnstakeStorage), "HeadParams")]
        public IActionResult GetHead()
        {
            return this.Ok(_fastUnstakeStorage.GetHead());
        }
        
        /// <summary>
        /// >> Queue
        ///  The map of all accounts wishing to be unstaked.
        /// 
        ///  Keeps track of `AccountId` wishing to unstake and it's corresponding deposit.
        /// </summary>
        [HttpGet("Queue")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(SubstrateNET.NetApi.Generated.Storage.FastUnstakeStorage), "QueueParams", typeof(SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32))]
        public IActionResult GetQueue(string key)
        {
            return this.Ok(_fastUnstakeStorage.GetQueue(key));
        }
        
        /// <summary>
        /// >> CounterForQueue
        /// Counter for the related counted storage map
        /// </summary>
        [HttpGet("CounterForQueue")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(SubstrateNET.NetApi.Generated.Storage.FastUnstakeStorage), "CounterForQueueParams")]
        public IActionResult GetCounterForQueue()
        {
            return this.Ok(_fastUnstakeStorage.GetCounterForQueue());
        }
        
        /// <summary>
        /// >> ErasToCheckPerBlock
        ///  Number of eras to check per block.
        /// 
        ///  If set to 0, this pallet does absolutely nothing.
        /// 
        ///  Based on the amount of weight available at `on_idle`, up to this many eras of a single
        ///  nominator might be checked.
        /// </summary>
        [HttpGet("ErasToCheckPerBlock")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(SubstrateNET.NetApi.Generated.Storage.FastUnstakeStorage), "ErasToCheckPerBlockParams")]
        public IActionResult GetErasToCheckPerBlock()
        {
            return this.Ok(_fastUnstakeStorage.GetErasToCheckPerBlock());
        }
    }
}
