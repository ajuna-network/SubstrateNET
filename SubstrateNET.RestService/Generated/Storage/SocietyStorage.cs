//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Types.Base;
using Ajuna.ServiceLayer.Attributes;
using Ajuna.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace SubstrateNET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// ISocietyStorage interface definition.
    /// </summary>
    public interface ISocietyStorage : IStorage
    {
        
        /// <summary>
        /// >> Founder
        ///  The first member.
        /// </summary>
        SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32 GetFounder();
        
        /// <summary>
        /// >> Rules
        ///  A hash of the rules of this society concerning membership. Can only be set once and
        ///  only by the founder.
        /// </summary>
        SubstrateNET.NetApi.Generated.Model.primitive_types.H256 GetRules();
        
        /// <summary>
        /// >> Candidates
        ///  The current set of candidates; bidders that are attempting to become members.
        /// </summary>
        Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.pallet_society.Bid> GetCandidates();
        
        /// <summary>
        /// >> SuspendedCandidates
        ///  The set of suspended candidates.
        /// </summary>
        Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U128, SubstrateNET.NetApi.Generated.Model.pallet_society.EnumBidKind> GetSuspendedCandidates(string key);
        
        /// <summary>
        /// >> Pot
        ///  Amount of our account balance that is specifically for the next round's bid(s).
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U128 GetPot();
        
        /// <summary>
        /// >> Head
        ///  The most primary from the most recently approved members.
        /// </summary>
        SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32 GetHead();
        
        /// <summary>
        /// >> Members
        ///  The current set of members, ordered.
        /// </summary>
        Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32> GetMembers();
        
        /// <summary>
        /// >> SuspendedMembers
        ///  The set of suspended members.
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.Bool GetSuspendedMembers(string key);
        
        /// <summary>
        /// >> Bids
        ///  The current bids, stored ordered by the value of the bid.
        /// </summary>
        Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.pallet_society.Bid> GetBids();
        
        /// <summary>
        /// >> Vouching
        ///  Members currently vouching or banned from vouching again
        /// </summary>
        SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVouchingStatus GetVouching(string key);
        
        /// <summary>
        /// >> Payouts
        ///  Pending payouts; ordered by block number, with the amount that should be paid out.
        /// </summary>
        Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.NetApi.Model.Types.Primitive.U128>> GetPayouts(string key);
        
        /// <summary>
        /// >> Strikes
        ///  The ongoing number of losing votes cast by the member.
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U32 GetStrikes(string key);
        
        /// <summary>
        /// >> Votes
        ///  Double map from Candidate -> Voter -> (Maybe) Vote.
        /// </summary>
        SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote GetVotes(string key);
        
        /// <summary>
        /// >> Defender
        ///  The defending member currently being challenged.
        /// </summary>
        SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32 GetDefender();
        
        /// <summary>
        /// >> DefenderVotes
        ///  Votes for the defender.
        /// </summary>
        SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote GetDefenderVotes(string key);
        
        /// <summary>
        /// >> MaxMembers
        ///  The max number of members for the society at one time.
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U32 GetMaxMembers();
    }
    
    /// <summary>
    /// SocietyStorage class definition.
    /// </summary>
    public sealed class SocietyStorage : ISocietyStorage
    {
        
        /// <summary>
        /// _founderTypedStorage typed storage field
        /// </summary>
        private TypedStorage<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32> _founderTypedStorage;
        
        /// <summary>
        /// _rulesTypedStorage typed storage field
        /// </summary>
        private TypedStorage<SubstrateNET.NetApi.Generated.Model.primitive_types.H256> _rulesTypedStorage;
        
        /// <summary>
        /// _candidatesTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.pallet_society.Bid>> _candidatesTypedStorage;
        
        /// <summary>
        /// _suspendedCandidatesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U128, SubstrateNET.NetApi.Generated.Model.pallet_society.EnumBidKind>> _suspendedCandidatesTypedStorage;
        
        /// <summary>
        /// _potTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U128> _potTypedStorage;
        
        /// <summary>
        /// _headTypedStorage typed storage field
        /// </summary>
        private TypedStorage<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32> _headTypedStorage;
        
        /// <summary>
        /// _membersTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32>> _membersTypedStorage;
        
        /// <summary>
        /// _suspendedMembersTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.Bool> _suspendedMembersTypedStorage;
        
        /// <summary>
        /// _bidsTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.pallet_society.Bid>> _bidsTypedStorage;
        
        /// <summary>
        /// _vouchingTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVouchingStatus> _vouchingTypedStorage;
        
        /// <summary>
        /// _payoutsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.NetApi.Model.Types.Primitive.U128>>> _payoutsTypedStorage;
        
        /// <summary>
        /// _strikesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U32> _strikesTypedStorage;
        
        /// <summary>
        /// _votesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote> _votesTypedStorage;
        
        /// <summary>
        /// _defenderTypedStorage typed storage field
        /// </summary>
        private TypedStorage<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32> _defenderTypedStorage;
        
        /// <summary>
        /// _defenderVotesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote> _defenderVotesTypedStorage;
        
        /// <summary>
        /// _maxMembersTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U32> _maxMembersTypedStorage;
        
        /// <summary>
        /// SocietyStorage constructor.
        /// </summary>
        public SocietyStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.FounderTypedStorage = new TypedStorage<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32>("Society.Founder", storageDataProvider, storageChangeDelegates);
            this.RulesTypedStorage = new TypedStorage<SubstrateNET.NetApi.Generated.Model.primitive_types.H256>("Society.Rules", storageDataProvider, storageChangeDelegates);
            this.CandidatesTypedStorage = new TypedStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.pallet_society.Bid>>("Society.Candidates", storageDataProvider, storageChangeDelegates);
            this.SuspendedCandidatesTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U128, SubstrateNET.NetApi.Generated.Model.pallet_society.EnumBidKind>>("Society.SuspendedCandidates", storageDataProvider, storageChangeDelegates);
            this.PotTypedStorage = new TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U128>("Society.Pot", storageDataProvider, storageChangeDelegates);
            this.HeadTypedStorage = new TypedStorage<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32>("Society.Head", storageDataProvider, storageChangeDelegates);
            this.MembersTypedStorage = new TypedStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32>>("Society.Members", storageDataProvider, storageChangeDelegates);
            this.SuspendedMembersTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.Bool>("Society.SuspendedMembers", storageDataProvider, storageChangeDelegates);
            this.BidsTypedStorage = new TypedStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.pallet_society.Bid>>("Society.Bids", storageDataProvider, storageChangeDelegates);
            this.VouchingTypedStorage = new TypedMapStorage<SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVouchingStatus>("Society.Vouching", storageDataProvider, storageChangeDelegates);
            this.PayoutsTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.NetApi.Model.Types.Primitive.U128>>>("Society.Payouts", storageDataProvider, storageChangeDelegates);
            this.StrikesTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U32>("Society.Strikes", storageDataProvider, storageChangeDelegates);
            this.VotesTypedStorage = new TypedMapStorage<SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote>("Society.Votes", storageDataProvider, storageChangeDelegates);
            this.DefenderTypedStorage = new TypedStorage<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32>("Society.Defender", storageDataProvider, storageChangeDelegates);
            this.DefenderVotesTypedStorage = new TypedMapStorage<SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote>("Society.DefenderVotes", storageDataProvider, storageChangeDelegates);
            this.MaxMembersTypedStorage = new TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U32>("Society.MaxMembers", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _founderTypedStorage property
        /// </summary>
        public TypedStorage<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32> FounderTypedStorage
        {
            get
            {
                return _founderTypedStorage;
            }
            set
            {
                _founderTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _rulesTypedStorage property
        /// </summary>
        public TypedStorage<SubstrateNET.NetApi.Generated.Model.primitive_types.H256> RulesTypedStorage
        {
            get
            {
                return _rulesTypedStorage;
            }
            set
            {
                _rulesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _candidatesTypedStorage property
        /// </summary>
        public TypedStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.pallet_society.Bid>> CandidatesTypedStorage
        {
            get
            {
                return _candidatesTypedStorage;
            }
            set
            {
                _candidatesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _suspendedCandidatesTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U128, SubstrateNET.NetApi.Generated.Model.pallet_society.EnumBidKind>> SuspendedCandidatesTypedStorage
        {
            get
            {
                return _suspendedCandidatesTypedStorage;
            }
            set
            {
                _suspendedCandidatesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _potTypedStorage property
        /// </summary>
        public TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U128> PotTypedStorage
        {
            get
            {
                return _potTypedStorage;
            }
            set
            {
                _potTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _headTypedStorage property
        /// </summary>
        public TypedStorage<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32> HeadTypedStorage
        {
            get
            {
                return _headTypedStorage;
            }
            set
            {
                _headTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _membersTypedStorage property
        /// </summary>
        public TypedStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32>> MembersTypedStorage
        {
            get
            {
                return _membersTypedStorage;
            }
            set
            {
                _membersTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _suspendedMembersTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.Bool> SuspendedMembersTypedStorage
        {
            get
            {
                return _suspendedMembersTypedStorage;
            }
            set
            {
                _suspendedMembersTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _bidsTypedStorage property
        /// </summary>
        public TypedStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.pallet_society.Bid>> BidsTypedStorage
        {
            get
            {
                return _bidsTypedStorage;
            }
            set
            {
                _bidsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _vouchingTypedStorage property
        /// </summary>
        public TypedMapStorage<SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVouchingStatus> VouchingTypedStorage
        {
            get
            {
                return _vouchingTypedStorage;
            }
            set
            {
                _vouchingTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _payoutsTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.NetApi.Model.Types.Primitive.U128>>> PayoutsTypedStorage
        {
            get
            {
                return _payoutsTypedStorage;
            }
            set
            {
                _payoutsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _strikesTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U32> StrikesTypedStorage
        {
            get
            {
                return _strikesTypedStorage;
            }
            set
            {
                _strikesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _votesTypedStorage property
        /// </summary>
        public TypedMapStorage<SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote> VotesTypedStorage
        {
            get
            {
                return _votesTypedStorage;
            }
            set
            {
                _votesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _defenderTypedStorage property
        /// </summary>
        public TypedStorage<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32> DefenderTypedStorage
        {
            get
            {
                return _defenderTypedStorage;
            }
            set
            {
                _defenderTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _defenderVotesTypedStorage property
        /// </summary>
        public TypedMapStorage<SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote> DefenderVotesTypedStorage
        {
            get
            {
                return _defenderVotesTypedStorage;
            }
            set
            {
                _defenderVotesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _maxMembersTypedStorage property
        /// </summary>
        public TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U32> MaxMembersTypedStorage
        {
            get
            {
                return _maxMembersTypedStorage;
            }
            set
            {
                _maxMembersTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Ajuna.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await FounderTypedStorage.InitializeAsync("Society", "Founder");
            await RulesTypedStorage.InitializeAsync("Society", "Rules");
            await CandidatesTypedStorage.InitializeAsync("Society", "Candidates");
            await SuspendedCandidatesTypedStorage.InitializeAsync("Society", "SuspendedCandidates");
            await PotTypedStorage.InitializeAsync("Society", "Pot");
            await HeadTypedStorage.InitializeAsync("Society", "Head");
            await MembersTypedStorage.InitializeAsync("Society", "Members");
            await SuspendedMembersTypedStorage.InitializeAsync("Society", "SuspendedMembers");
            await BidsTypedStorage.InitializeAsync("Society", "Bids");
            await VouchingTypedStorage.InitializeAsync("Society", "Vouching");
            await PayoutsTypedStorage.InitializeAsync("Society", "Payouts");
            await StrikesTypedStorage.InitializeAsync("Society", "Strikes");
            await VotesTypedStorage.InitializeAsync("Society", "Votes");
            await DefenderTypedStorage.InitializeAsync("Society", "Defender");
            await DefenderVotesTypedStorage.InitializeAsync("Society", "DefenderVotes");
            await MaxMembersTypedStorage.InitializeAsync("Society", "MaxMembers");
        }
        
        /// <summary>
        /// Implements any storage change for Society.Founder
        /// </summary>
        [StorageChange("Society", "Founder")]
        public void OnUpdateFounder(string data)
        {
            FounderTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Founder
        ///  The first member.
        /// </summary>
        public SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32 GetFounder()
        {
            return FounderTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Society.Rules
        /// </summary>
        [StorageChange("Society", "Rules")]
        public void OnUpdateRules(string data)
        {
            RulesTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Rules
        ///  A hash of the rules of this society concerning membership. Can only be set once and
        ///  only by the founder.
        /// </summary>
        public SubstrateNET.NetApi.Generated.Model.primitive_types.H256 GetRules()
        {
            return RulesTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Society.Candidates
        /// </summary>
        [StorageChange("Society", "Candidates")]
        public void OnUpdateCandidates(string data)
        {
            CandidatesTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Candidates
        ///  The current set of candidates; bidders that are attempting to become members.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.pallet_society.Bid> GetCandidates()
        {
            return CandidatesTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Society.SuspendedCandidates
        /// </summary>
        [StorageChange("Society", "SuspendedCandidates")]
        public void OnUpdateSuspendedCandidates(string key, string data)
        {
            SuspendedCandidatesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> SuspendedCandidates
        ///  The set of suspended candidates.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U128, SubstrateNET.NetApi.Generated.Model.pallet_society.EnumBidKind> GetSuspendedCandidates(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (SuspendedCandidatesTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U128, SubstrateNET.NetApi.Generated.Model.pallet_society.EnumBidKind> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Society.Pot
        /// </summary>
        [StorageChange("Society", "Pot")]
        public void OnUpdatePot(string data)
        {
            PotTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Pot
        ///  Amount of our account balance that is specifically for the next round's bid(s).
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U128 GetPot()
        {
            return PotTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Society.Head
        /// </summary>
        [StorageChange("Society", "Head")]
        public void OnUpdateHead(string data)
        {
            HeadTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Head
        ///  The most primary from the most recently approved members.
        /// </summary>
        public SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32 GetHead()
        {
            return HeadTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Society.Members
        /// </summary>
        [StorageChange("Society", "Members")]
        public void OnUpdateMembers(string data)
        {
            MembersTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Members
        ///  The current set of members, ordered.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32> GetMembers()
        {
            return MembersTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Society.SuspendedMembers
        /// </summary>
        [StorageChange("Society", "SuspendedMembers")]
        public void OnUpdateSuspendedMembers(string key, string data)
        {
            SuspendedMembersTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> SuspendedMembers
        ///  The set of suspended members.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.Bool GetSuspendedMembers(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (SuspendedMembersTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Primitive.Bool result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Society.Bids
        /// </summary>
        [StorageChange("Society", "Bids")]
        public void OnUpdateBids(string data)
        {
            BidsTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Bids
        ///  The current bids, stored ordered by the value of the bid.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Base.BaseVec<SubstrateNET.NetApi.Generated.Model.pallet_society.Bid> GetBids()
        {
            return BidsTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Society.Vouching
        /// </summary>
        [StorageChange("Society", "Vouching")]
        public void OnUpdateVouching(string key, string data)
        {
            VouchingTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Vouching
        ///  Members currently vouching or banned from vouching again
        /// </summary>
        public SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVouchingStatus GetVouching(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (VouchingTypedStorage.Dictionary.TryGetValue(key, out SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVouchingStatus result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Society.Payouts
        /// </summary>
        [StorageChange("Society", "Payouts")]
        public void OnUpdatePayouts(string key, string data)
        {
            PayoutsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Payouts
        ///  Pending payouts; ordered by block number, with the amount that should be paid out.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.NetApi.Model.Types.Primitive.U128>> GetPayouts(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PayoutsTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.NetApi.Model.Types.Primitive.U128>> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Society.Strikes
        /// </summary>
        [StorageChange("Society", "Strikes")]
        public void OnUpdateStrikes(string key, string data)
        {
            StrikesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Strikes
        ///  The ongoing number of losing votes cast by the member.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U32 GetStrikes(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (StrikesTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Society.Votes
        /// </summary>
        [StorageChange("Society", "Votes")]
        public void OnUpdateVotes(string key, string data)
        {
            VotesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Votes
        ///  Double map from Candidate -> Voter -> (Maybe) Vote.
        /// </summary>
        public SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote GetVotes(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (VotesTypedStorage.Dictionary.TryGetValue(key, out SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Society.Defender
        /// </summary>
        [StorageChange("Society", "Defender")]
        public void OnUpdateDefender(string data)
        {
            DefenderTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Defender
        ///  The defending member currently being challenged.
        /// </summary>
        public SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32 GetDefender()
        {
            return DefenderTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Society.DefenderVotes
        /// </summary>
        [StorageChange("Society", "DefenderVotes")]
        public void OnUpdateDefenderVotes(string key, string data)
        {
            DefenderVotesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> DefenderVotes
        ///  Votes for the defender.
        /// </summary>
        public SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote GetDefenderVotes(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (DefenderVotesTypedStorage.Dictionary.TryGetValue(key, out SubstrateNET.NetApi.Generated.Model.pallet_society.EnumVote result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Society.MaxMembers
        /// </summary>
        [StorageChange("Society", "MaxMembers")]
        public void OnUpdateMaxMembers(string data)
        {
            MaxMembersTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> MaxMembers
        ///  The max number of members for the society at one time.
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U32 GetMaxMembers()
        {
            return MaxMembersTypedStorage.Get();
        }
    }
}
