//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Types.Base;
using Ajuna.ServiceLayer.Attributes;
using Ajuna.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace SubstrateNET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IWhitelistStorage interface definition.
    /// </summary>
    public interface IWhitelistStorage : IStorage
    {
        
        /// <summary>
        /// >> WhitelistedCall
        /// </summary>
        Ajuna.NetApi.Model.Types.Base.BaseTuple GetWhitelistedCall(string key);
    }
    
    /// <summary>
    /// WhitelistStorage class definition.
    /// </summary>
    public sealed class WhitelistStorage : IWhitelistStorage
    {
        
        /// <summary>
        /// _whitelistedCallTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Base.BaseTuple> _whitelistedCallTypedStorage;
        
        /// <summary>
        /// WhitelistStorage constructor.
        /// </summary>
        public WhitelistStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.WhitelistedCallTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Base.BaseTuple>("Whitelist.WhitelistedCall", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _whitelistedCallTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Base.BaseTuple> WhitelistedCallTypedStorage
        {
            get
            {
                return _whitelistedCallTypedStorage;
            }
            set
            {
                _whitelistedCallTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Ajuna.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await WhitelistedCallTypedStorage.InitializeAsync("Whitelist", "WhitelistedCall");
        }
        
        /// <summary>
        /// Implements any storage change for Whitelist.WhitelistedCall
        /// </summary>
        [StorageChange("Whitelist", "WhitelistedCall")]
        public void OnUpdateWhitelistedCall(string key, string data)
        {
            WhitelistedCallTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> WhitelistedCall
        /// </summary>
        public Ajuna.NetApi.Model.Types.Base.BaseTuple GetWhitelistedCall(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (WhitelistedCallTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Base.BaseTuple result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
