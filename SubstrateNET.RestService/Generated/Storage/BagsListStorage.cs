//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Ajuna.ServiceLayer.Attributes;
using Ajuna.ServiceLayer.Storage;
using SubstrateNET.NetApi.Generated.Model.PalletBagsList;
using SubstrateNET.NetApi.Generated.Model.SpCore;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace SubstrateNET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IBagsListStorage interface definition.
    /// </summary>
    public interface IBagsListStorage : IStorage
    {
        
        /// <summary>
        /// >> ListNodes
        ///  A single node, within some bag.
        /// 
        ///  Nodes store links forward and back within their respective bags.
        /// </summary>
        SubstrateNET.NetApi.Generated.Model.PalletBagsList.Node GetListNodes(string key);
        
        /// <summary>
        /// >> CounterForListNodes
        /// Counter for the related counted storage map
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U32 GetCounterForListNodes();
        
        /// <summary>
        /// >> ListBags
        ///  A bag stored in storage.
        /// 
        ///  Stores a `Bag` struct, which stores head and tail pointers to itself.
        /// </summary>
        SubstrateNET.NetApi.Generated.Model.PalletBagsList.Bag GetListBags(string key);
    }
    
    /// <summary>
    /// BagsListStorage class definition.
    /// </summary>
    public sealed class BagsListStorage : IBagsListStorage
    {
        
        /// <summary>
        /// _listNodesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<SubstrateNET.NetApi.Generated.Model.PalletBagsList.Node> _listNodesTypedStorage;
        
        /// <summary>
        /// _counterForListNodesTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U32> _counterForListNodesTypedStorage;
        
        /// <summary>
        /// _listBagsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<SubstrateNET.NetApi.Generated.Model.PalletBagsList.Bag> _listBagsTypedStorage;
        
        /// <summary>
        /// BagsListStorage constructor.
        /// </summary>
        public BagsListStorage(IStorageDataProvider storageDataProvider, IStorageChangeDelegate storageChangeDelegate)
        {
            this.ListNodesTypedStorage = new TypedMapStorage<SubstrateNET.NetApi.Generated.Model.PalletBagsList.Node>("BagsList.ListNodes", storageDataProvider, storageChangeDelegate);
            this.CounterForListNodesTypedStorage = new TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U32>("BagsList.CounterForListNodes", storageDataProvider, storageChangeDelegate);
            this.ListBagsTypedStorage = new TypedMapStorage<SubstrateNET.NetApi.Generated.Model.PalletBagsList.Bag>("BagsList.ListBags", storageDataProvider, storageChangeDelegate);
        }
        
        /// <summary>
        /// _listNodesTypedStorage property
        /// </summary>
        public TypedMapStorage<SubstrateNET.NetApi.Generated.Model.PalletBagsList.Node> ListNodesTypedStorage
        {
            get
            {
                return _listNodesTypedStorage;
            }
            set
            {
                _listNodesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _counterForListNodesTypedStorage property
        /// </summary>
        public TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U32> CounterForListNodesTypedStorage
        {
            get
            {
                return _counterForListNodesTypedStorage;
            }
            set
            {
                _counterForListNodesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _listBagsTypedStorage property
        /// </summary>
        public TypedMapStorage<SubstrateNET.NetApi.Generated.Model.PalletBagsList.Bag> ListBagsTypedStorage
        {
            get
            {
                return _listBagsTypedStorage;
            }
            set
            {
                _listBagsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Ajuna.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await ListNodesTypedStorage.InitializeAsync("BagsList", "ListNodes");
            await CounterForListNodesTypedStorage.InitializeAsync("BagsList", "CounterForListNodes");
            await ListBagsTypedStorage.InitializeAsync("BagsList", "ListBags");
        }
        
        /// <summary>
        /// Implements any storage change for BagsList.ListNodes
        /// </summary>
        [StorageChange("BagsList", "ListNodes")]
        public void OnUpdateListNodes(string key, string data)
        {
            ListNodesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ListNodes
        ///  A single node, within some bag.
        /// 
        ///  Nodes store links forward and back within their respective bags.
        /// </summary>
        public SubstrateNET.NetApi.Generated.Model.PalletBagsList.Node GetListNodes(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ListNodesTypedStorage.Dictionary.TryGetValue(key, out SubstrateNET.NetApi.Generated.Model.PalletBagsList.Node result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for BagsList.CounterForListNodes
        /// </summary>
        [StorageChange("BagsList", "CounterForListNodes")]
        public void OnUpdateCounterForListNodes(string data)
        {
            CounterForListNodesTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> CounterForListNodes
        /// Counter for the related counted storage map
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U32 GetCounterForListNodes()
        {
            return CounterForListNodesTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for BagsList.ListBags
        /// </summary>
        [StorageChange("BagsList", "ListBags")]
        public void OnUpdateListBags(string key, string data)
        {
            ListBagsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ListBags
        ///  A bag stored in storage.
        /// 
        ///  Stores a `Bag` struct, which stores head and tail pointers to itself.
        /// </summary>
        public SubstrateNET.NetApi.Generated.Model.PalletBagsList.Bag GetListBags(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ListBagsTypedStorage.Dictionary.TryGetValue(key, out SubstrateNET.NetApi.Generated.Model.PalletBagsList.Bag result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
