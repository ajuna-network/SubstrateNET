//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Attributes;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace SubstrateNET.NetApi.Generated.Model.sp_transaction_storage_proof
{
    
    
    /// <summary>
    /// >> 341 - Composite[sp_transaction_storage_proof.TransactionStorageProof]
    /// </summary>
    [AjunaNodeType(TypeDefEnum.Composite)]
    public sealed class TransactionStorageProof : BaseType
    {
        
        /// <summary>
        /// >> chunk
        /// </summary>
        private Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> _chunk;
        
        /// <summary>
        /// >> proof
        /// </summary>
        private Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>> _proof;
        
        public Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> Chunk
        {
            get
            {
                return this._chunk;
            }
            set
            {
                this._chunk = value;
            }
        }
        
        public Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>> Proof
        {
            get
            {
                return this._proof;
            }
            set
            {
                this._proof = value;
            }
        }
        
        public override string TypeName()
        {
            return "TransactionStorageProof";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Chunk.Encode());
            result.AddRange(Proof.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Chunk = new Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>();
            Chunk.Decode(byteArray, ref p);
            Proof = new Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Base.BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>>();
            Proof.Decode(byteArray, ref p);
            TypeSize = p - start;
        }
    }
}
