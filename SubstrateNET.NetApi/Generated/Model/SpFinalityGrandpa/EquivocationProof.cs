//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Attributes;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Metadata.V14;
using Ajuna.NetApi.Model.Types.Primitive;
using SubstrateNET.NetApi.Generated.Model.SpFinalityGrandpa;
using System.Collections.Generic;


namespace SubstrateNET.NetApi.Generated.Model.SpFinalityGrandpa
{
    
    
    /// <summary>
    /// >> 251 - Composite[sp_finality_grandpa.EquivocationProof]
    /// </summary>
    [AjunaNodeType(TypeDefEnum.Composite)]
    public sealed class EquivocationProof : BaseType
    {
        
        /// <summary>
        /// >> set_id
        /// </summary>
        private Ajuna.NetApi.Model.Types.Primitive.U64 _setId;
        
        /// <summary>
        /// >> equivocation
        /// </summary>
        private SubstrateNET.NetApi.Generated.Model.SpFinalityGrandpa.EnumEquivocation _equivocation;
        
        public Ajuna.NetApi.Model.Types.Primitive.U64 SetId
        {
            get
            {
                return this._setId;
            }
            set
            {
                this._setId = value;
            }
        }
        
        public SubstrateNET.NetApi.Generated.Model.SpFinalityGrandpa.EnumEquivocation Equivocation
        {
            get
            {
                return this._equivocation;
            }
            set
            {
                this._equivocation = value;
            }
        }
        
        public override string TypeName()
        {
            return "EquivocationProof";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(SetId.Encode());
            result.AddRange(Equivocation.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            SetId = new Ajuna.NetApi.Model.Types.Primitive.U64();
            SetId.Decode(byteArray, ref p);
            Equivocation = new SubstrateNET.NetApi.Generated.Model.SpFinalityGrandpa.EnumEquivocation();
            Equivocation.Decode(byteArray, ref p);
            TypeSize = p - start;
        }
    }
}
