//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Attributes;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace SubstrateNET.NetApi.Generated.Model.frame_support.weights
{
    
    
    /// <summary>
    /// >> 112 - Composite[frame_support.weights.PostDispatchInfo]
    /// </summary>
    [AjunaNodeType(TypeDefEnum.Composite)]
    public sealed class PostDispatchInfo : BaseType
    {
        
        /// <summary>
        /// >> actual_weight
        /// </summary>
        private Ajuna.NetApi.Model.Types.Base.BaseOpt<Ajuna.NetApi.Model.Types.Primitive.U64> _actualWeight;
        
        /// <summary>
        /// >> pays_fee
        /// </summary>
        private SubstrateNET.NetApi.Generated.Model.frame_support.weights.EnumPays _paysFee;
        
        public Ajuna.NetApi.Model.Types.Base.BaseOpt<Ajuna.NetApi.Model.Types.Primitive.U64> ActualWeight
        {
            get
            {
                return this._actualWeight;
            }
            set
            {
                this._actualWeight = value;
            }
        }
        
        public SubstrateNET.NetApi.Generated.Model.frame_support.weights.EnumPays PaysFee
        {
            get
            {
                return this._paysFee;
            }
            set
            {
                this._paysFee = value;
            }
        }
        
        public override string TypeName()
        {
            return "PostDispatchInfo";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(ActualWeight.Encode());
            result.AddRange(PaysFee.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            ActualWeight = new Ajuna.NetApi.Model.Types.Base.BaseOpt<Ajuna.NetApi.Model.Types.Primitive.U64>();
            ActualWeight.Decode(byteArray, ref p);
            PaysFee = new SubstrateNET.NetApi.Generated.Model.frame_support.weights.EnumPays();
            PaysFee.Decode(byteArray, ref p);
            TypeSize = p - start;
        }
    }
}
