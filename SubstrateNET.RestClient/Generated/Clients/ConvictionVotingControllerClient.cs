//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubstrateNET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using SubstrateNET.NetApi.Generated.Model.PalletConvictionVoting;
   using SubstrateNET.NetApi.Generated.Model.SpRuntime;
   using SubstrateNET.RestClient.Generated.Interfaces;
   
   public sealed class ConvictionVotingControllerClient : BaseClient, IConvictionVotingControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public ConvictionVotingControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<EnumVoting> GetVotingFor(Ajuna.NetApi.Model.Types.Base.BaseTuple<SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32, Ajuna.NetApi.Model.Types.Primitive.U16> key)
      {
         return await SendRequestAsync<EnumVoting>(_httpClient, "convictionvoting/votingfor", ConvictionVotingStorage.VotingForParams(key));
      }
      public async Task<bool> SubscribeVotingFor(Ajuna.NetApi.Model.Types.Base.BaseTuple<SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32, Ajuna.NetApi.Model.Types.Primitive.U16> key)
      {
         return await _subscriptionClient.SubscribeAsync("ConvictionVoting.VotingFor", ConvictionVotingStorage.VotingForParams(key));
      }
      public async Task<BoundedVecT37> GetClassLocksFor(SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32 key)
      {
         return await SendRequestAsync<BoundedVecT37>(_httpClient, "convictionvoting/classlocksfor", ConvictionVotingStorage.ClassLocksForParams(key));
      }
      public async Task<bool> SubscribeClassLocksFor(SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("ConvictionVoting.ClassLocksFor", ConvictionVotingStorage.ClassLocksForParams(key));
      }
   }
}
