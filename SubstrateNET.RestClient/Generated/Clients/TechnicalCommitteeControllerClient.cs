//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubstrateNET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using SubstrateNET.NetApi.Generated.Model.sp_runtime.bounded.bounded_vec;
   using SubstrateNET.NetApi.Generated.Model.node_runtime;
   using SubstrateNET.NetApi.Generated.Model.pallet_collective;
   using Ajuna.NetApi.Model.Types.Primitive;
   using Ajuna.NetApi.Model.Types.Base;
   using SubstrateNET.NetApi.Generated.Model.sp_core.crypto;
   using SubstrateNET.RestClient.Generated.Interfaces;
   
   public sealed class TechnicalCommitteeControllerClient : BaseClient, ITechnicalCommitteeControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public TechnicalCommitteeControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<BoundedVecT14> GetProposals()
      {
         return await SendRequestAsync<BoundedVecT14>(_httpClient, "technicalcommittee/proposals");
      }
      public async Task<bool> SubscribeProposals()
      {
         return await _subscriptionClient.SubscribeAsync("TechnicalCommittee.Proposals");
      }
      public async Task<EnumCall> GetProposalOf(SubstrateNET.NetApi.Generated.Model.primitive_types.H256 key)
      {
         return await SendRequestAsync<EnumCall>(_httpClient, "technicalcommittee/proposalof", SubstrateNET.NetApi.Generated.Storage.TechnicalCommitteeStorage.ProposalOfParams(key));
      }
      public async Task<bool> SubscribeProposalOf(SubstrateNET.NetApi.Generated.Model.primitive_types.H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("TechnicalCommittee.ProposalOf", SubstrateNET.NetApi.Generated.Storage.TechnicalCommitteeStorage.ProposalOfParams(key));
      }
      public async Task<Votes> GetVoting(SubstrateNET.NetApi.Generated.Model.primitive_types.H256 key)
      {
         return await SendRequestAsync<Votes>(_httpClient, "technicalcommittee/voting", SubstrateNET.NetApi.Generated.Storage.TechnicalCommitteeStorage.VotingParams(key));
      }
      public async Task<bool> SubscribeVoting(SubstrateNET.NetApi.Generated.Model.primitive_types.H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("TechnicalCommittee.Voting", SubstrateNET.NetApi.Generated.Storage.TechnicalCommitteeStorage.VotingParams(key));
      }
      public async Task<U32> GetProposalCount()
      {
         return await SendRequestAsync<U32>(_httpClient, "technicalcommittee/proposalcount");
      }
      public async Task<bool> SubscribeProposalCount()
      {
         return await _subscriptionClient.SubscribeAsync("TechnicalCommittee.ProposalCount");
      }
      public async Task<BaseVec<AccountId32>> GetMembers()
      {
         return await SendRequestAsync<BaseVec<AccountId32>>(_httpClient, "technicalcommittee/members");
      }
      public async Task<bool> SubscribeMembers()
      {
         return await _subscriptionClient.SubscribeAsync("TechnicalCommittee.Members");
      }
      public async Task<AccountId32> GetPrime()
      {
         return await SendRequestAsync<AccountId32>(_httpClient, "technicalcommittee/prime");
      }
      public async Task<bool> SubscribePrime()
      {
         return await _subscriptionClient.SubscribeAsync("TechnicalCommittee.Prime");
      }
   }
}
