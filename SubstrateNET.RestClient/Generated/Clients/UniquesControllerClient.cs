//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubstrateNET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using SubstrateNET.NetApi.Generated.Model.PalletUniques;
   using Ajuna.NetApi.Model.Types.Primitive;
   using Ajuna.NetApi.Model.Types.Base;
   using SubstrateNET.RestClient.Generated.Interfaces;
   
   public sealed class UniquesControllerClient : BaseClient, IUniquesControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public UniquesControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<ClassDetails> GetClass(U32 key)
      {
         return await SendRequestAsync<ClassDetails>(_httpClient, "uniques/class", UniquesStorage.ClassParams(key));
      }
      public async Task<bool> SubscribeClass(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.Class", UniquesStorage.ClassParams(key));
      }
      public async Task<U32> GetOwnershipAcceptance(SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32 key)
      {
         return await SendRequestAsync<U32>(_httpClient, "uniques/ownershipacceptance", UniquesStorage.OwnershipAcceptanceParams(key));
      }
      public async Task<bool> SubscribeOwnershipAcceptance(SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.OwnershipAcceptance", UniquesStorage.OwnershipAcceptanceParams(key));
      }
      public async Task<BaseTuple> GetAccount(BaseTuple<SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32, U32, U32> key)
      {
         return await SendRequestAsync<BaseTuple>(_httpClient, "uniques/account", UniquesStorage.AccountParams(key));
      }
      public async Task<bool> SubscribeAccount(BaseTuple<SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32, U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.Account", UniquesStorage.AccountParams(key));
      }
      public async Task<BaseTuple> GetClassAccount(BaseTuple<SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32, U32> key)
      {
         return await SendRequestAsync<BaseTuple>(_httpClient, "uniques/classaccount", UniquesStorage.ClassAccountParams(key));
      }
      public async Task<bool> SubscribeClassAccount(BaseTuple<SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.ClassAccount", UniquesStorage.ClassAccountParams(key));
      }
      public async Task<InstanceDetails> GetAsset(BaseTuple<U32, U32> key)
      {
         return await SendRequestAsync<InstanceDetails>(_httpClient, "uniques/asset", UniquesStorage.AssetParams(key));
      }
      public async Task<bool> SubscribeAsset(BaseTuple<U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.Asset", UniquesStorage.AssetParams(key));
      }
      public async Task<ClassMetadata> GetClassMetadataOf(U32 key)
      {
         return await SendRequestAsync<ClassMetadata>(_httpClient, "uniques/classmetadataof", UniquesStorage.ClassMetadataOfParams(key));
      }
      public async Task<bool> SubscribeClassMetadataOf(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.ClassMetadataOf", UniquesStorage.ClassMetadataOfParams(key));
      }
      public async Task<InstanceMetadata> GetInstanceMetadataOf(BaseTuple<U32, U32> key)
      {
         return await SendRequestAsync<InstanceMetadata>(_httpClient, "uniques/instancemetadataof", UniquesStorage.InstanceMetadataOfParams(key));
      }
      public async Task<bool> SubscribeInstanceMetadataOf(BaseTuple<U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.InstanceMetadataOf", UniquesStorage.InstanceMetadataOfParams(key));
      }
      public async Task<BaseTuple<SubstrateNET.NetApi.Generated.Model.FrameSupport.BoundedVecT3, U128>> GetAttribute(BaseTuple<U32, BaseOpt<U32>, SubstrateNET.NetApi.Generated.Model.FrameSupport.BoundedVecT2> key)
      {
         return await SendRequestAsync<BaseTuple<SubstrateNET.NetApi.Generated.Model.FrameSupport.BoundedVecT3, U128>>(_httpClient, "uniques/attribute", UniquesStorage.AttributeParams(key));
      }
      public async Task<bool> SubscribeAttribute(BaseTuple<U32, BaseOpt<U32>, SubstrateNET.NetApi.Generated.Model.FrameSupport.BoundedVecT2> key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.Attribute", UniquesStorage.AttributeParams(key));
      }
   }
}
