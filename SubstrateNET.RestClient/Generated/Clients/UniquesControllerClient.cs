//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubstrateNET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using SubstrateNET.NetApi.Generated.Model.pallet_uniques.types;
   using Ajuna.NetApi.Model.Types.Primitive;
   using Ajuna.NetApi.Model.Types.Base;
   using SubstrateNET.NetApi.Generated.Model.sp_core.bounded.bounded_vec;
   using SubstrateNET.RestClient.Generated.Interfaces;
   
   public sealed class UniquesControllerClient : BaseClient, IUniquesControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public UniquesControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<CollectionDetails> GetClass(U32 key)
      {
         return await SendRequestAsync<CollectionDetails>(_httpClient, "uniques/class", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.ClassParams(key));
      }
      public async Task<bool> SubscribeClass(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.Class", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.ClassParams(key));
      }
      public async Task<U32> GetOwnershipAcceptance(SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendRequestAsync<U32>(_httpClient, "uniques/ownershipacceptance", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.OwnershipAcceptanceParams(key));
      }
      public async Task<bool> SubscribeOwnershipAcceptance(SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.OwnershipAcceptance", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.OwnershipAcceptanceParams(key));
      }
      public async Task<BaseTuple> GetAccount(BaseTuple<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32, U32, U32> key)
      {
         return await SendRequestAsync<BaseTuple>(_httpClient, "uniques/account", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.AccountParams(key));
      }
      public async Task<bool> SubscribeAccount(BaseTuple<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32, U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.Account", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.AccountParams(key));
      }
      public async Task<BaseTuple> GetClassAccount(BaseTuple<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32, U32> key)
      {
         return await SendRequestAsync<BaseTuple>(_httpClient, "uniques/classaccount", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.ClassAccountParams(key));
      }
      public async Task<bool> SubscribeClassAccount(BaseTuple<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.ClassAccount", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.ClassAccountParams(key));
      }
      public async Task<ItemDetails> GetAsset(BaseTuple<U32, U32> key)
      {
         return await SendRequestAsync<ItemDetails>(_httpClient, "uniques/asset", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.AssetParams(key));
      }
      public async Task<bool> SubscribeAsset(BaseTuple<U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.Asset", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.AssetParams(key));
      }
      public async Task<CollectionMetadata> GetClassMetadataOf(U32 key)
      {
         return await SendRequestAsync<CollectionMetadata>(_httpClient, "uniques/classmetadataof", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.ClassMetadataOfParams(key));
      }
      public async Task<bool> SubscribeClassMetadataOf(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.ClassMetadataOf", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.ClassMetadataOfParams(key));
      }
      public async Task<ItemMetadata> GetInstanceMetadataOf(BaseTuple<U32, U32> key)
      {
         return await SendRequestAsync<ItemMetadata>(_httpClient, "uniques/instancemetadataof", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.InstanceMetadataOfParams(key));
      }
      public async Task<bool> SubscribeInstanceMetadataOf(BaseTuple<U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.InstanceMetadataOf", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.InstanceMetadataOfParams(key));
      }
      public async Task<BaseTuple<BoundedVecT3, U128>> GetAttribute(BaseTuple<U32, BaseOpt<U32>, BoundedVecT2> key)
      {
         return await SendRequestAsync<BaseTuple<BoundedVecT3, U128>>(_httpClient, "uniques/attribute", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.AttributeParams(key));
      }
      public async Task<bool> SubscribeAttribute(BaseTuple<U32, BaseOpt<U32>, BoundedVecT2> key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.Attribute", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.AttributeParams(key));
      }
      public async Task<BaseTuple<U128, BaseOpt<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32>>> GetItemPriceOf(BaseTuple<U32, U32> key)
      {
         return await SendRequestAsync<BaseTuple<U128, BaseOpt<SubstrateNET.NetApi.Generated.Model.sp_core.crypto.AccountId32>>>(_httpClient, "uniques/itempriceof", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.ItemPriceOfParams(key));
      }
      public async Task<bool> SubscribeItemPriceOf(BaseTuple<U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.ItemPriceOf", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.ItemPriceOfParams(key));
      }
      public async Task<U32> GetCollectionMaxSupply(U32 key)
      {
         return await SendRequestAsync<U32>(_httpClient, "uniques/collectionmaxsupply", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.CollectionMaxSupplyParams(key));
      }
      public async Task<bool> SubscribeCollectionMaxSupply(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("Uniques.CollectionMaxSupply", SubstrateNET.NetApi.Generated.Storage.UniquesStorage.CollectionMaxSupplyParams(key));
      }
   }
}
