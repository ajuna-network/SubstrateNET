//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubstrateNET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using SubstrateNET.NetApi.Generated.Model.SpRuntime;
   using SubstrateNET.NetApi.Generated.Model.PalletContracts;
   using Ajuna.NetApi.Model.Types.Primitive;
   using SubstrateNET.RestClient.Generated.Interfaces;
   
   public sealed class ContractsControllerClient : BaseClient, IContractsControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public ContractsControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<BoundedVecT17> GetPristineCode(SubstrateNET.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await SendRequestAsync<BoundedVecT17>(_httpClient, "contracts/pristinecode", ContractsStorage.PristineCodeParams(key));
      }
      public async Task<bool> SubscribePristineCode(SubstrateNET.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("Contracts.PristineCode", ContractsStorage.PristineCodeParams(key));
      }
      public async Task<PrefabWasmModule> GetCodeStorage(SubstrateNET.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await SendRequestAsync<PrefabWasmModule>(_httpClient, "contracts/codestorage", ContractsStorage.CodeStorageParams(key));
      }
      public async Task<bool> SubscribeCodeStorage(SubstrateNET.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("Contracts.CodeStorage", ContractsStorage.CodeStorageParams(key));
      }
      public async Task<OwnerInfo> GetOwnerInfoOf(SubstrateNET.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await SendRequestAsync<OwnerInfo>(_httpClient, "contracts/ownerinfoof", ContractsStorage.OwnerInfoOfParams(key));
      }
      public async Task<bool> SubscribeOwnerInfoOf(SubstrateNET.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("Contracts.OwnerInfoOf", ContractsStorage.OwnerInfoOfParams(key));
      }
      public async Task<U64> GetNonce()
      {
         return await SendRequestAsync<U64>(_httpClient, "contracts/nonce");
      }
      public async Task<bool> SubscribeNonce()
      {
         return await _subscriptionClient.SubscribeAsync("Contracts.Nonce");
      }
      public async Task<RawContractInfo> GetContractInfoOf(SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32 key)
      {
         return await SendRequestAsync<RawContractInfo>(_httpClient, "contracts/contractinfoof", ContractsStorage.ContractInfoOfParams(key));
      }
      public async Task<bool> SubscribeContractInfoOf(SubstrateNET.NetApi.Generated.Model.SpCore.AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("Contracts.ContractInfoOf", ContractsStorage.ContractInfoOfParams(key));
      }
      public async Task<BoundedVecT20> GetDeletionQueue()
      {
         return await SendRequestAsync<BoundedVecT20>(_httpClient, "contracts/deletionqueue");
      }
      public async Task<bool> SubscribeDeletionQueue()
      {
         return await _subscriptionClient.SubscribeAsync("Contracts.DeletionQueue");
      }
   }
}
