//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubstrateNET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using SubstrateNET.NetApi.Generated.Model.PalletPreimage;
   using SubstrateNET.NetApi.Generated.Model.FrameSupport;
   using SubstrateNET.RestClient.Generated.Interfaces;
   
   public sealed class PreimageControllerClient : BaseClient, IPreimageControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public PreimageControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<EnumRequestStatus> GetStatusFor(SubstrateNET.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await SendRequestAsync<EnumRequestStatus>(_httpClient, "preimage/statusfor", PreimageStorage.StatusForParams(key));
      }
      public async Task<bool> SubscribeStatusFor(SubstrateNET.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("Preimage.StatusFor", PreimageStorage.StatusForParams(key));
      }
      public async Task<BoundedVecT18> GetPreimageFor(SubstrateNET.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await SendRequestAsync<BoundedVecT18>(_httpClient, "preimage/preimagefor", PreimageStorage.PreimageForParams(key));
      }
      public async Task<bool> SubscribePreimageFor(SubstrateNET.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("Preimage.PreimageFor", PreimageStorage.PreimageForParams(key));
      }
   }
}
