//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubstrateNET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Ajuna.NetApi.Model.Types.Primitive;
   using SubstrateNET.NetApi.Generated.Model.PalletRankedCollective;
   using SubstrateNET.NetApi.Generated.Model.SpCore;
   using SubstrateNET.NetApi.Generated.Model.SpRuntime;
   using SubstrateNET.RestClient.Generated.Interfaces;
   
   public sealed class RankedCollectiveControllerClient : BaseClient, IRankedCollectiveControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public RankedCollectiveControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<U32> GetMemberCount(U16 key)
      {
         return await SendRequestAsync<U32>(_httpClient, "rankedcollective/membercount", RankedCollectiveStorage.MemberCountParams(key));
      }
      public async Task<bool> SubscribeMemberCount(U16 key)
      {
         return await _subscriptionClient.SubscribeAsync("RankedCollective.MemberCount", RankedCollectiveStorage.MemberCountParams(key));
      }
      public async Task<MemberRecord> GetMembers(AccountId32 key)
      {
         return await SendRequestAsync<MemberRecord>(_httpClient, "rankedcollective/members", RankedCollectiveStorage.MembersParams(key));
      }
      public async Task<bool> SubscribeMembers(AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("RankedCollective.Members", RankedCollectiveStorage.MembersParams(key));
      }
      public async Task<U32> GetIdToIndex(Ajuna.NetApi.Model.Types.Base.BaseTuple<U16, AccountId32> key)
      {
         return await SendRequestAsync<U32>(_httpClient, "rankedcollective/idtoindex", RankedCollectiveStorage.IdToIndexParams(key));
      }
      public async Task<bool> SubscribeIdToIndex(Ajuna.NetApi.Model.Types.Base.BaseTuple<U16, AccountId32> key)
      {
         return await _subscriptionClient.SubscribeAsync("RankedCollective.IdToIndex", RankedCollectiveStorage.IdToIndexParams(key));
      }
      public async Task<AccountId32> GetIndexToId(Ajuna.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await SendRequestAsync<AccountId32>(_httpClient, "rankedcollective/indextoid", RankedCollectiveStorage.IndexToIdParams(key));
      }
      public async Task<bool> SubscribeIndexToId(Ajuna.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("RankedCollective.IndexToId", RankedCollectiveStorage.IndexToIdParams(key));
      }
      public async Task<EnumVoteRecord> GetVoting(Ajuna.NetApi.Model.Types.Base.BaseTuple<U32, AccountId32> key)
      {
         return await SendRequestAsync<EnumVoteRecord>(_httpClient, "rankedcollective/voting", RankedCollectiveStorage.VotingParams(key));
      }
      public async Task<bool> SubscribeVoting(Ajuna.NetApi.Model.Types.Base.BaseTuple<U32, AccountId32> key)
      {
         return await _subscriptionClient.SubscribeAsync("RankedCollective.Voting", RankedCollectiveStorage.VotingParams(key));
      }
      public async Task<BoundedVecT45> GetVotingCleanup(U32 key)
      {
         return await SendRequestAsync<BoundedVecT45>(_httpClient, "rankedcollective/votingcleanup", RankedCollectiveStorage.VotingCleanupParams(key));
      }
      public async Task<bool> SubscribeVotingCleanup(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("RankedCollective.VotingCleanup", RankedCollectiveStorage.VotingCleanupParams(key));
      }
   }
}
